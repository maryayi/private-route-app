{"version":3,"sources":["components/PrivateRoute.tsx","components/Home.tsx","App.tsx","components/User.tsx","components/Admin.tsx","reportWebVitals.ts","index.tsx"],"names":["PrivateRoute","isAllowed","path","component","exact","Component","className","Home","routes","role","App","useState","setRole","htmlFor","id","value","onChange","e","target","to","map","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAyBeA,EAfM,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAC9CC,EAAYF,EAChB,OACE,cAAC,IAAD,CACED,KAAMA,EACNE,MAAOA,EAFT,SAIGH,EACC,cAACI,EAAD,IACA,mBAAGC,UAAU,uBAAb,gDCTOC,EARF,WACX,OACE,qBAAKD,UAAU,OAAf,8ECUEE,EAAS,CACb,CACEN,KAAM,QACNC,UCfS,WACX,OACE,qBAAKG,UAAU,OAAf,yDDcAG,KAAM,QAER,CACEP,KAAM,SACNC,UEpBU,WACZ,OACE,qBAAKG,UAAU,QAAf,0DFmBAG,KAAM,UAiEKC,MA7Df,WACE,MAAwBC,mBAAS,QAAjC,mBAAOF,EAAP,KAAaG,EAAb,KACA,OACE,qBAAKN,UAAU,MAAf,SACE,eAAC,IAAD,WACE,yBAAQA,UAAU,cAAlB,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOO,QAAQ,OAAOP,UAAU,kBAAhC,uBACA,yBAAQQ,GAAG,OAAOC,MAAON,EAAMO,SAAU,SAAAC,GAAC,OAAIL,EAAQK,EAAEC,OAAOH,QAA/D,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,yBAGJ,qBAAIT,UAAU,WAAd,UACE,6BACE,cAAC,IAAD,CAAMa,GAAG,IAAT,SACE,yCAKJ,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,SACE,mDAKJ,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,SACE,0DAOR,eAAC,IAAD,WACE,cAAC,IAAD,CACEjB,KAAK,IACLE,OAAK,EAFP,SAIE,cAAC,EAAD,MAEDI,EAAOY,KAAI,SAAAC,GACV,OACE,cAAC,EAAD,CAEEnB,KAAMmB,EAAMnB,KACZC,UAAWkB,EAAMlB,UACjBF,UAAWoB,EAAMZ,OAASA,EAC1BL,OAAK,GAJAiB,EAAMnB,kBG5DZoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0fd3851.chunk.js","sourcesContent":["import React, { ComponentType } from 'react'\nimport { Route } from 'react-router-dom'\n\ninterface Props {\n  path: string,\n  component: ComponentType,\n  isAllowed: boolean,\n  exact?: boolean,\n}\n\nconst PrivateRoute = ({ isAllowed, path, component, exact }: Props) => {\n  let Component = component\n  return (\n    <Route\n      path={path}\n      exact={exact}\n    >\n      {isAllowed ?\n        <Component /> :\n        <p className=\"private__not-allowed\">Not allowed based on your role!</p>\n      }\n    </Route >\n  )\n}\n\nexport default PrivateRoute;","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      This is public Home! please select another route from top menu.\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './components/Home'\nimport Admin from './components/Admin'\nimport User from './components/User'\n\nconst routes = [\n  {\n    path: '/user',\n    component: User,\n    role: 'user',\n  },\n  {\n    path: '/admin',\n    component: Admin,\n    role: 'admin',\n  }\n]\n\nfunction App() {\n  const [role, setRole] = useState('user');\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App__header\">\n          <div className=\"App__role\">\n            <label htmlFor=\"role\" className=\"App__role-label\">Your role</label>\n            <select id=\"role\" value={role} onChange={e => setRole(e.target.value)}>\n              <option value=\"user\">User</option>\n              <option value=\"admin\">Admin</option>\n            </select>\n          </ div>\n          <ul className=\"App__nav\">\n            <li>\n              <Link to=\"/\">\n                <a>\n                  Home\n                </a>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/user\">\n                <a>\n                  Only for users\n                </a>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/admin\">\n                <a>\n                  Only for admins\n                </a>\n              </Link>\n            </li>\n          </ul>\n        </header>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n          >\n            <Home />\n          </Route>\n          {routes.map(route => {\n            return (\n              <PrivateRoute\n                key={route.path}\n                path={route.path}\n                component={route.component}\n                isAllowed={route.role === role}\n                exact\n              />\n            )\n          })}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\nconst User = () => {\n  return (\n    <div className=\"user\">\n      This is only for users and you can see it!\n    </div>\n  )\n}\n\nexport default User","import React from 'react'\n\nconst Admin = () => {\n  return (\n    <div className=\"admin\">\n      This is only for admins and you can see it!\n    </div>\n  )\n}\n\nexport default Admin\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}